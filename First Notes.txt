TCP:   Transmission Control Protocol

founder: Tim Barnas Lee
founder of CSS:  Harkon Wium Liee
Founder of JS:  Bredan Eich
NETSCAPE
url:  uNIVERSAL RESOURCE LOCATOR


SEARCH ENGINE: Interpreter, Crawler, Index

SHIFT !  CREATES THE FUNDAMENTALS OF HTML 
HTML:5 ALSO CREATES FUNDAMENTALS

XML:  Extensible markup language  
XHMTL :  Extenible hypertext markup language

UTF: Unicode Trancode Format 

&copy;  gives copyright 

div#wrapper   ##shortcut for creating div and id

NON SEMANTIC :  DIV AND SPAN TAGS 

EVERY OTHER TAG IS SEMANTIC 

h1 = Largest Font  HEADING 1
h6 = Smallest Font   HEADING 6


COMMENT OUT IN HTML <!-- hh -->   cmd + /

Inline Tags:  { <i>, <strong>, <b>, <underline>, <em>, <mark>, <s>, <u>   }

IMG tag has src attribute 

video tag has : controls, autoplay, muted, loop attributes 


CSS was designed by Harkon Wium Lise

Inline Styling {Pass attributes in HTML, they have KEY:VALUE properties}
Internal Styling {Styling can be called in any part of the HTML body using <style> tag } 
External 


/// FORM ///
attributes>>>
	action:   Where you want the data to be processed 
	method: GET/POST/(Diaolgue)

/// FORM VALIDATION ///
maxlength
minlength


USE LEGENDS IN FIELDSET


INPUT:  SEMANTIC TAG with Types


///TABLES ///
caption
thead {tr, th}
tr 
th 
tbody{ tr, td}


////CSS///
1. Selectors:
ID: 
TAG:  h3, table, div
CLASS:

2. Cascade


DECLARATION = Key, Properties


DOM!!!
Use border box to make page responsive 
margin: 0;


PSEUDO-ELEMENT SELECTOR:
button[type="submit"]{
	background-color: #fffff;
}


VH:   Viewport of screen 
use 10vh  = 10


Use rem for text on script
Default height of screen is 100vh


ABSOLUTE UNITS = px, cm, in, length
RELATIVE UNITS = %, em, rem, points [rem applies to Root element]  [em applies to parent element]


Position:  Relative, Fixed, Static, Sticky, ABSOLUTE

Y-AXIS:   VERTICAL 
X-AXIS:  HORIZONTAL 
Z-AXIS:  DEPTH


ANIMATION:


ANIMATION: animation namme, animation duration, animation timing function, animation iteration count. 

//// TO TARGET FIRST CHILD OF AN ELEMENT//---#textContainer p:first-child{}

////TO TARGET nth-child/// .rotate>.box:nth-child(7){}

SASS:  Synthetic awesome style sheet  Pre-Processor
Tailwind:  Post-CSS Processor  //  Bootstrap

MERN:  MongoDB, Express JS, REACT, Node JS


Javascript Documentation: BABBEL
ECMASCRIPT 

DATATYPES: Primitive: Array, Object//   Reference: String, Number, Boolean, Undefined, Null

alert()   This is a window element

Var{Can be reassigned and redeclared} also backward compatible, Let{can only be reassigned}, Const{can not be either}


typeof()

Array is a collection of items in form of index and value.  [Two types of Array Methods]=Literal Method, Constructor Method= new Array('basin', 'food', 'water')
Object is a collection of properties in form of key and value. {}

//

let person = {
	'name':'john', 
	'age': 23,
	'country':'Libya'
}

== checks for value 
=== checks for data type



LOOPS:
1. Entry control LOOPS
2. Exit control loops 


FOR:
INITIATION, CONDITION , INCREMENT/DECEREMENT

parseInt converts string to Integer

.pop()  // This removes last item of an Array
.shift()  /// removes first item in an array 
.unshift() /// inserts new element inside an array at beginning 
.push() ///  inserts new elements inside an array at end 
.join() /// joins elements together to 1 string value 
.splice() ///  used to slice an array, leaving two arrays.  1 with the 		sliced out items and another with the updated items of the original array. can take 3 parameters.   Array.splice(1, 5, "yu")//   starts at index 1, removes 5 characters and replaces with "yu"
.slice() /// slices an array and returns the updated items in the array.  array.slice(6)  // starts slicing from the 6th character
.indexOf() // finds the array index number[] of an array 
.reverse() /// reverses the order of the array items 
.charAt() //  returns the value of the string at the specified character index.  works like [9]

.every() /// uses => ARROW FUNCTION to compare an item to items in an array 
array.every((x) => x > 6)   Returns BOOLEAN value

.includes() // checks if an item is present in an array. Returns boolean value 
.map() // performs operation on individual items in an array 
array.map((n) => n*2);

.filter() // filters through an array to run an operation
array.filter((n)=> n%2===0); //  Filters through the array andf runs the modulus operation.

.find() // Finds for a particular item in an array.
array.find((n)=> n === 7)  // Finds first item in array that matches 7. Returns the item.
.includes() // checks if a variable exists in an array or list. 
[...users]  /// this mirrors the items of an array.   Spread Operator

ARRAY METHOD: SLICE, SPLICE, FILTER, MAP 


WINDOW OBJECT MODEL // alert(), prompt(), confirm()
BROWSER OBJECT MODEL 
DOCUMENT OBJECT MODEL


VAR IS GLOBAL SCOPE 
LET IS LOCAL SCOPE

ANONYMOUS FUNCTIONS ARE ALSO (IIFE) = Immediately Invoked Function Expression 


TCP POWERS HTTP 
UDP : USER DIAGRAM PROTOCOL 
TCP: TRANSMISSION CONTROL PROTOCOL 
